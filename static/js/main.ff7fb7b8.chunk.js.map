{"version":3,"sources":["components/NavBar/NavBar.jsx","components/Home/Home.jsx","components/Publications/Publications.jsx","components/CV/cv.jsx","components/Blog/Blog.jsx","components/ReadingList/ReadingList.jsx","components/Research/research.jsx","components/Travel/Travel.jsx","components/Teaching/teaching.jsx","App.js","index.js"],"names":["NavBar","react_default","a","createElement","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","eventKey","componentClass","href","to","Component","Home","document","title","Container","fluid","Jumbotron","Row","Col","xs","sm","Image","src","roundedCircle","react_social_icons","url","style","height","width","margin","bgColor","fgColor","class","date-data","alt","thumbnail","Publications","years","Pubs","map","year","id","publications","publication","Fragment","Card","Header","Accordion","as","variant","Body","md","link","target","image_path","responsive","abstract","defaultActivityKey","CV","str","authors","includes","split","marked","i","length","author","trim","startsWith","substring","_this","this","education","CVData","fields","school","degrees","degree","advisor","experience","employer","duration","position","accomplishments","accomplishment","projects","project","client","rounded","work","w","pub","dangerouslySetInnerHTML","__html","markMe","venue","workshops","slides","merits","talks","merit","description","courseWebsites","course_websites","course","name","ref","Blog","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","topics","Set","Content","j","keywords","add","state","currentTopic","toConsumableArray","sort","handleClick","bind","assertThisInitialized","event","setState","_this2","postData","field","key","indexOf","date","join","body","topicButtons","topic","Button","onClick","Research","display","flex","Teaching","marginLeft","CardDeck","Title","Text","App","HashRouter","NavBar_NavBar_NavBar","Route","exact","path","component","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.ff7fb7b8.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport { Nav, Navbar, NavLink} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"./NavBar.css\"\n//<Nav.Link eventKey={2} componentClass={Link} href=\"#/publications\" to=\"/publications\"> Publications </Nav.Link>\n//<Nav.Link eventKey={2} componentClass={Link} href=\"#/travel\" to=\"/Travel\"> Travel </Nav.Link>\n//<Nav.Link eventKey={4} componentClass={Link} href=\"#/readinglist\" to=\"/readinglist\"> Reading List </Nav.Link>\n\nexport default class NavBar extends Component {\n  render() {\n    return (\n      <Navbar bg=\"dark\" expand=\"lg\"> \n        <Navbar.Brand>\n          David H Smith IV\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse>\n          <Nav className=\"ml-auto\">\n            <Nav.Link eventKey={1} componentClass={Link} href=\"#/\" to=\"/\"> Home </Nav.Link>\n            <Nav.Link eventKey={2} componentClass={Link} href=\"#/research\" to=\"/research\"> Research </Nav.Link>\n            <Nav.Link eventKey={3} componentClass={Link} href=\"#/teaching\" to=\"/teaching\"> Teaching </Nav.Link>\n            <Nav.Link eventKey={4} componentClass={Link} href=\"#/blog\" to=\"/blog\" > Blog </Nav.Link>\n            <Nav.Link eventKey={5} componentClass={Link} href=\"#/cv\" to=\"/cv\"> Curriculum Vitae </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\n","import React, { Component } from 'react'\nimport { Jumbotron, Container, Row, Col, Image } from 'react-bootstrap';\nimport { SocialIcon } from 'react-social-icons';\nimport \"./Home.css\";\n\nexport default class Home extends Component {\n\n  componentDidMount() {\n    document.title = \"David H Smith IV | Home\";\n  }\n\n  render() {\n\n    return (\n      <Container fluid>\n        <Jumbotron>\n          <Row>\n\n            <Col className=\"how-grid text-center\" xs={17} sm={4} >\n\n              <Image src=\"https://scholar.googleusercontent.com/citations?view_op=medium_photo&user=hpe-z9YAAAAJ&citpid=3\" roundedCircle/>\n              <h3 className=\"profile-photo-subtitle\"> </h3>\n\n              <div>\n                <div className=\"sub\"> Computing Education Researcher </div>\n                <div className=\"sub\"> Linux & Coffee Enthusiast </div>\n\n                <SocialIcon url=\"https://www.linkedin.com/in/david-smith-1b9499102/\" \n                style={{ height: 25, width: 25, margin: 2 }} \n                bgColor='#000000' \n                fgColor='#c0c0c0' />\n\n                <SocialIcon url=\"https://github.com/CoffeePoweredComputers\" \n                style={{ height: 25, width: 25, margin: 2 }} \n                bgColor='#000000' \n                fgColor='#c0c0c0' />\n\n                <SocialIcon url=\"https://twitter.com/DavidHSmithIV\" \n                style={{ height: 25, width: 25, margin: 2 }} \n                bgColor='#000000' \n                fgColor='#c0c0c0' />\n\n                <SocialIcon url=\"https://medium.com/@davidhsmith4\" \n                style={{ height: 25, width: 25, margin: 2 }} \n                bgColor='#000000' \n                fgColor='#c0c0c0' />\n              </div>\n              <Col>\n                <div class=\"block\">\n                  <b>Bio: </b>I am a fifth year PhD student at the University\n                  of Illinois Urbana-Champaign (UIUC) in the <a href=\"https://siebelschool.illinois.edu/\" ><u>Siebel School of\n                  Computing and Data Science</u></a>. My research area is Computers and\n                  Education where I am advised by <a href=\"https://zilles.cs.illinois.edu/\" ><u>Craig Zilles</u></a>. I completed\n                  Bachelor's of Science in Computer Science at Western Washington\n                  University where I was advised by <a href=\"https://qhao.info/\" ><u>Qiang Hao</u></a>. \n                </div>\n                <div class=\"block block-scroller\">\n                  <b>News: </b>\n                  <ul class=\"news-list\">\n                    <li class=\"news-li news-li-border\" date-data=\"10/02/2024\"> \n                      Our paper \"Exploring Student Reactions to LLM-Generated Feedback on Explain in Plain English Problems\" was accepted to ACM SIGCSE 2025!\n                    </li>\n                    <li class=\"news-li news-li-border\" date-data=\"10/01/2024 - 10/02/2024\">\n                      I visited the University of Toronto St. George and University of Toronto Mississauga to give a talk on \"Explain in Plain Language Questions\". Many thanks to the faculty, particularly Daniel Zingaro, for hosting me!\n                    </li>\n                    <li class=\"news-li news-li-border\" date-data=\"10/01/2024\"> \n                      Our paper \"Explain in Plain Language Question with Indic Languages: Drawbacks, Affordances, and Opportunities\"\n                      was accepted to COMPUTE 2025 and is now avaliable on arXiv: <a href=\"https://arxiv.org/abs/2409.20297\"> arxiv.org/abs/2409.20297 </a>.\n                    </li>\n                  </ul>\n                </div>\n              </Col>\n\n            </Col>\n            <Col className='bio bio-alignment'>\n              <p>\n                <b>I develop and evaluate interactive and engaging tools that\n                support novice programmers.</b> My goal as a researcher working\n                at the intersection of <a href=\"https://faculty.washington.edu/ajko/cer\"><u>Computing\n                Education Research (CER)</u></a> and Human-Computer Interaction\n                (HCI) to draw on theories of learning to create effective and\n                scaleable approaches for educating the next generation of\n                computing professionals. My work has included a wide range of \n                topics within CER, and my current areas of focus are as follows.\n                <div className=\"research-areas\">\n                  <Row className=\"mb-4 block align-items-center\">\n                    <Col xs={2}>\n                      <Image src=\"assets/parsons2.png\" alt=\"Scaffolding Learning\" thumbnail />\n                    </Col>\n                    <Col xs={9}>\n                      <h5>Scaffolding Learning to Write Code with Parsons Problems</h5>\n                      <p>\n                        I investigate the design of Parsons Problems for\n                        teaching and exams in introductory Python. My work in\n                        this area so far has included investigations on the\n                        impact of including distractor blocks (i.e., incorrect\n                        blocks of code) in the problem on its <a href=\"https://zilles.cs.illinois.edu/papers/smith_parsons_grouped_COMPED_2023.pdf\"><u>\n                        psychometric properties</u></a> and the <a\n                        href=\"https://dl.acm.org/doi/pdf/10.1145/3632620.3671114\"><u>impact\n                        of distractors on learning</u></a>. I have also been\n                        involved in a variety of collaborative endevors\n                        including an <a\n                        href=\"https://arxiv.org/pdf/2405.19460\"><u>evaluation of\n                        micro-parsons problems</u></a> as exam items and a <a\n                        href=\"https://repository.falmouth.ac.uk/5216/1/ITiCSE_2023_WorkingGroup_Parsons_Report.pdf\"><u>multi-institutional\n                        study</u></a> of the impact of Parsons Problems on student learning. I\n                        have been involved in supporting the <a\n                        href=\"https://prairielearn.readthedocs.io/en/latest/elements/#pl-order-blocks-element\"><u>order-blocks</u></a>\n                        element on the <a href=\"https://us.prairielearn.com/\"><u>PrairieLearn</u></a> assessment\n                        platform and involved in development of the Parsons Problems element on <a\n                        href=\"https://www.codespec.org/\"><u>CodeSpec</u></a>.\n                      </p>\n                    </Col>\n                  </Row>\n\n                  <Row className=\"mb-4 block align-items-center\">\n                    <Col xs={2}>\n                      <Image src=\"assets/eipllogo.png\" alt=\"Human-GenAI Collaborative Coding\" thumbnail />\n                    </Col>\n                    <Col xs={9}>\n                      <h5>Instructing Novice Programmers in Human-GenAI Collaborative Coding</h5>\n                      <p>\n                        My research in this area focuses on developing tools\n                        that support students in learning the skills they need\n                        to successfully engage in Human-GenAI collaborative\n                        coding. I introduced an autograding system, <a\n                        href=\"https://arxiv.org/pdf/2311.14903.pdf\"><u>\"Code\n                        Generation Based Grading\"</u></a> for Explain in Plain\n                        English (EiPE) which aims to develop students ability\n                        in prompting generative AI to generate code and code\n                        comprehension skills which helps novices evaluate its\n                        results. I maintain a Python package, <a\n                        href=\"https://github.com/CoffeePoweredComputers/eiplgrader\"><u><code>eiplgrader</code></u></a>,\n                        which supports the use of this autograder. My most\n                        recent investigations in this area have focused on\n                        evaluating the efficacy of this approach in\n                        linguistically diverse contexts, such as <a\n                        href=\"https://arxiv.org/abs/2409.20297\"><u>India</u></a>.\n                      </p>\n                    </Col>\n                  </Row>\n\n                  <Row className=\"mb-4 block align-items-center\">\n                    <Col xs={2}>\n                      <Image src=\"assets/cbtf.png\" alt=\"Computer Based Testing\" thumbnail />\n                    </Col>\n                    <Col xs={9}>\n                      <h5>Scaling Assessment through Computer Based Testing</h5>\n                      <p>\n                        I am broadly interested in supporting at scale computer-based \n                        testing as they support frequent and second chance testing, \n                        immediate feedback, and reduce burden on instructors and course \n                        staff. I have investigated <a\n                        href=\"https://par.nsf.gov/servlets/purl/10434207\">\n                        <u>second chance testing policies</u></a>, <a\n                        href=\"https://dl.acm.org/doi/pdf/10.1145/3478431.3499388\"><u>fairness of\n                        randomized exams</u></a>, and the <a\n                        href=\"https://par.nsf.gov/servlets/purl/10434191\"><u>impact of frequent\n                        exams on students' performance</u></a>.\n                      </p>\n                    </Col>\n                  </Row>\n                </div>\n\n                For more details on this work see my <a href=\"/#/cv\"><u>CV</u></a> and my <a href=\"/#/research\"><u>research</u></a> statement. For details on my teaching \n                and teaching philosophy see my <a href=\"/#/teaching\"><u>teaching</u></a> page.\n              </p>\n            </Col>\n          </Row>\n        </Jumbotron>\n      </Container>\n      );\n\n  }\n}\n","import React, { Component } from 'react'\nimport { Jumbotron, Container, Row, Col, Image, Card, Accordion} from 'react-bootstrap';\nimport \"./Publications.css\";\nimport Pubs from \"./pubs.json\";\n\n\nexport default class Publications extends Component {\n\n  componentDidMount() {\n    document.title = \"David H Smith IV | Publications\";\n  }\n\n  render() {\n\n    /* Reads through the list of current publications and renders them according to the template */\n\n    const years = Pubs.map( (year, id) => {\n\n     const publications = year.publications.map( (publication, id) => {\n\n       return(\n         <React.Fragment>\n            <Card.Header>\n              <Accordion.Toggle as={Card.Header} className=\"title-header\" variant='link' eventKey={id}>\n                {publication.title}\n              </Accordion.Toggle>\n            </Card.Header>\n            <Accordion.Collapse eventKey={id}>\n              <Card.Body>\n                <Row>\n                  <Col md={2}>\n                    <a href={publication.link} target=\"_blank\"><Image src={publication.image_path} responsive thumbnail className=\"profile-pic\" /></a>\n                  </Col>\n                  <Col className=\"text-left abstract\">\n                    <i> Abstract:  </i> {publication.abstract} \n                  </Col>\n                </Row>\n              </Card.Body>\n            </Accordion.Collapse>\n          </React.Fragment>\n          );\n      });\n\n\n      return(\n        <React.Fragment>\n          <Row>\n            <div className=\"year-header\"> {year.year} </div>\n          </Row>\n          <Accordion defaultActivityKey=\"0\">\n          {publications}\n          </Accordion>\n        </React.Fragment>\n      )\n\n\n    } );\n\n\n    return (\n      <Container fluid>\n        <Jumbotron >\n\n          <Row>\n            <div className=\"pub-header\">\n              Publications\n            </div>\n          </Row>\n\n          {years}\n\n        </Jumbotron >\n      </Container >\n      );\n}\n}\n","import React, { Component } from 'react'\nimport { Jumbotron, Container, Row, Col, Image, Button} from 'react-bootstrap';\nimport \"./cv.css\";\nimport CVData from './cv.json';\n\nexport default class CV extends Component {\n\n    componentDidMount() {\n        document.title = \"David H Smith IV | CV\";\n    }\n\n    markMe(str) {\n        var authors = \"\"\n        if (str.includes(\"and\")) {\n            authors = str.split(\"and\");\n        } else {\n            authors = str.split(\",\");\n        }\n        var marked = \"\";\n        for (var i = 0; i < authors.length; i++) {\n            var author = authors[i].trim();\n            if (author.startsWith(\"David\")) {\n                marked += \"<u>David H. Smith IV\" + (author.includes(\"*\") ? \"*\" : \"\") + \"</u>, \";\n\n            } else {\n                marked += author + \", \";\n            }\n        }\n        return marked.substring(0, marked.length - 2);\n    }\n\n\n    render() {\n\n        /* Creates a list of all my educational attributes */\n        const education = CVData.education.map( (fields, id) => {\n            return( \n                <React.Fragment>\n                    <div className=\"cv-position\"><b>{fields.school}</b></div>\n                    <div className=\"cv-year\">{fields.years}</div>\n                    {fields.degrees.map( (degree, id) => { return <React.Fragment> <i> {degree} </i> <br/> </React.Fragment>})}\n                    {fields.advisor !== \"\" ? (<i> <b> Advisor: </b> {fields.advisor}</i>) : (<div></div>) }\n                </React.Fragment> \n            );\n        });\n\n        /* Creates a list of all my experiences */\n        const experience = CVData.experience.map( (experience, id) => {\n            return(\n                <React.Fragment>\n                    <div className=\"cv-position\"><b>{experience.employer}</b></div>\n                    <div className=\"cv-year\">{experience.duration}</div>\n                    <i>{experience.position}</i>\n                    <ul>\n                        { experience.accomplishments.map( (accomplishment, id) => { return <li> {accomplishment} </li> } )}\n                    </ul>\n                </React.Fragment>\n                );\n        });\n\n        /* Creates a list of all my projects */\n        const projects = CVData.projects.map( (project, id) => {\n            return(\n                <React.Fragment>\n\n                    <div className=\"cv-position\"><b>{project.title}</b></div>\n                    <i>{project.client}</i>\n\n                    <Row>\n\n                        <Col sm={5}>\n                            <Image src={project.image_path} thumbnail rounded />\n                        </Col>\n\n                        <Col sm={7}>\n                            <ul>\n                                { project.work.map( (w, id) => { return <li> {w} </li> }) }\n                            </ul>\n                        </Col>\n\n                    </Row>\n                    <br/>\n                </React.Fragment>\n                );\n        });\n\n        const publications = CVData.publications.map ( (pub, id) => {\n            return(\n                <React.Fragment>\n                    <li>\n                        <i><span dangerouslySetInnerHTML={{__html: this.markMe(pub.authors)}}></span></i>&nbsp;-&nbsp;\n                        <a href={pub.link}>\n                            <b>{pub.title}</b>\n                        </a>&nbsp;-&nbsp;{pub.venue}\n                    </li>\n                </React.Fragment>\n                );\n        });\n\n        const workshops = CVData.workshops.map ( (work, id) => {\n            return(\n                <React.Fragment>\n                    <li>\n                        <i><span dangerouslySetInnerHTML={{__html: this.markMe(work.authors)}}></span></i>&nbsp;-&nbsp;\n                        <a href={work.slides}>\n                            <b>{work.title}</b>\n                        </a> \n                        ,&nbsp;{work.venue}\n                    </li>\n                </React.Fragment>\n                );\n        });\n\n        const invitedTalk = CVData.talks.map ( (pub, id) => {\n            return(\n                <React.Fragment>\n                    <li>\n                        <b>{pub.title}</b>\n                        ,&nbsp;{pub.venue}\n                    </li>\n                </React.Fragment>\n                );\n        });\n\n\n        const merits = CVData.merits.map( (merit, id) => {\n            return(\n                <React.Fragment>\n                    <li>\n                        <i><b>{merit.title}</b></i> - {merit.description}\n                    </li>\n                </React.Fragment>\n                );\n        });\n\n        const courseWebsites = CVData.course_websites.map( (course, id) => {\n            return(\n                <React.Fragment>\n                    <li>\n                        <i><b>{course.name}</b></i> - <a href={course.link}> {course.link} </a>\n                    </li>\n                </React.Fragment>\n            )\n        });\n\n        return (\n\n            <Container>\n                <Jumbotron>\n\n                    <div className=\"cv\" id=\"cv\" ref=\"cv\">\n\n                        <div className=\"cv-header\"><b>Education</b></div>\n                        {education}\n\n                        <div className=\"cv-header\"><b>Experience</b></div>\n                        {experience}\n\n\n                        <div className=\"cv-header\"><b>Projects</b></div>\n                        {projects}\n\n\n                        <div className=\"cv-header\"><b>Publications</b></div>\n                        <ol className=\"cv-publist\">\n                            {publications}\n                        </ol>\n                        <span> <i> Note: the * indicates equal contribution. 🥈 indicates best paper nomination and 🏆 indicates best paper award. </i> </span>\n\n                        <div className=\"cv-header\"><b>Posters, Workshops, and Long Abstracts</b></div>\n                        <ul className=\"cv-publist\">\n                            {workshops}\n                        </ul>\n\n                        <div className=\"cv-header\"><b>Course Websites</b></div>\n                        <ul>\n                            {courseWebsites}\n                        </ul>\n\n                        <div className=\"cv-header\"><b>Academic Achievements</b></div>\n                        <ul>\n                            {merits}\n                        </ul>\n                    </div>\n\n                </Jumbotron >\n            </Container >\n            );\n    }\n}\n","import React, { Component } from 'react';\nimport { Jumbotron, Container, Row, Col, Button} from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport './Blog.css';\nimport Content from './posts.json';\n\nexport default class Blog extends Component {\n\n  constructor(props){\n\n    super(props);\n\n    /* Gets the set of all topics*/\n    let topics = new Set(); \n    for(let i = 0; i < Content.length; i++){\n      for(let j = 0; j < Content[i].keywords.length; j++){\n        topics.add(Content[i].keywords[j])\n      }\n    }\n\n    /* Sets up all of the initial states */\n    this.state = {\n      currentTopic: \"\",\n      topics: [...topics].sort()\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  /* Does some stuff if the component mounts */\n  componentDidMount() {\n\n    document.title = 'David H Smith IV | Blog';\n\n  }\n\n  /* Handles the click for the topic selection buttons */\n  handleClick(event){\n    this.setState({\n      currentTopic: event.target.id\n    });\n  }\n\n  render() {\n\n    /* formats all the post data that was read during the component mounting */\n    const postData = Content.map( (field, key) => {\n\n      if(field.keywords.indexOf(this.state.currentTopic) > -1 || this.state.currentTopic === ''){\n        return(\n          <Jumbotron className='post'>\n            <Col>\n              <Row>\n                <div className=\"post-header\">\n                  <div className='title'> {field.title} </div>\n                  <div className='date'> {field.date} </div>\n                </div>\n              </Row>\n              <Row>\n                <div className='topic'> \n                  <b> Topics: </b> \n                  {field.keywords.join(', ')}\n                </div>\n              </Row>\n              <Row className='post-body'>\n                {field.body}\n              </Row>\n              <Row>\n                <b><a href={field.link}> Continue reading on Medium... </a></b>\n              </Row>\n            </Col>\n          </Jumbotron>\n          );\n      }\n\n    });\n\n    const topicButtons = this.state.topics.map( (topic, key) => {\n      return <Button key={key} onClick={this.handleClick} id={topic} variant='dark'> {topic} </Button>\n      });\n\n\n    /* Gets the goods on the screen */\n    return (\n      <Container fluid>\n        <Jumbotron>\n          <div className='topic-selection'> Select a topic to view </div>\n          <Row className='topic-list'> \n            <Button key={this.state.topics.length} onClick={this.handleClick} id='' variant='dark'> All </Button>\n            {topicButtons} \n          </Row>\n        </Jumbotron>\n        {postData}\n      </Container>\n      );\n\n}\n}\n","import React, { Component } from 'react'\nimport { Jumbotron, Container, Row, Col, Image, Card, Accordion} from 'react-bootstrap';\nimport \"./ReadingList.css\";\nimport papers from \"./papers.json\";\n\n\nexport default class ReadingList extends Component {\n\n    componentDidMount() {\n        document.title = \"David H Smith IV | Publications\";\n    }\n\n    render() {\n\n        /* Reads through the list of current publications and renders them according to the template */\n\n        const topics  = papers.map( (topic, id) => {\n\n            const papers = topic.papers.map( (paperInfo, id) => { \n                return(\n                    <li><b><a href={paperInfo.link}>{paperInfo.title}</a>:</b> {paperInfo.summary}</li>\n                    );\n            })\n\n            const books = topic.books.map( (bookInfo, id) => { \n                return(\n                    <li><b><a href={bookInfo.link}>{bookInfo.title}</a>:</b> {bookInfo.summary}</li>\n                    );\n            })\n\n            return(\n                <React.Fragment>\n                    <Accordion defaultActivityKey=\"0\">\n                        <Card.Header>\n                            <Accordion.Toggle as={Card.Header} className=\"title-header\" variant='link' eventKey={id}>\n                                {topic.title}\n                            </Accordion.Toggle>\n                        </Card.Header>\n                        <Accordion.Collapse eventKey={id}>\n                            <Card.Body>\n                                <Row>\n                                    <div className=\"year-header\"> Books </div>\n                                </Row>\n                                <ul>\n                                    {books}\n                                </ul>\n                                <Row>\n                                    <div className=\"year-header\"> Papers </div>\n                                </Row>\n                                <ul>\n                                    {papers}\n                                </ul>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Accordion>\n                </React.Fragment>\n                );\n\n\n    } );\n\n\n        return (\n            <Container fluid>\n                <Jumbotron >\n                    {topics}\n                </Jumbotron >\n            </Container >\n            );\n}\n}\n","import React, { Component } from 'react'\nimport { Jumbotron, Container, Row, Col, Image, Button} from 'react-bootstrap';\nimport \"./research.css\";\n\nexport default class Research extends Component {\n\n  componentDidMount() {\n    document.title = \"David H Smith IV | Research\";\n  }\n\n  render() {\n\n    return (\n\n      <Container fluid>\n        <Jumbotron>\n\n          <div class=\"section\"> Research </div>\n          <p>\n            <b>I develop interactive and engaging tools that support novice\n            programmers.</b> My goal as a researcher working at the\n            intersection of Computing Education Research (CER) and\n            Human-Computer Interaction (HCI) to draw on theories of\n            learning to create effective and scaleable approaches for\n            educating the next generation of computing professionals.\n          </p>\n          <p>\n            A significant part of my work in this space has involved Parsons\n            problems, a programming activity in which learners must correctly\n            arrange code fragments to solve a problem. My most recent work aims\n            to support novices in engaging with human-GenAI collaborative\n            programming. The long-term vision for this research is to create\n            tools and approaches that enable individuals from non-computing\n            backgrounds to seamlessly integrate computing into their workflows\n            through code generation by prompting — what could be characterized\n            as natural language programming. My published and current work on\n            these topics are detailed further in the following sections.\n          </p>\n\n\n          <div class=\"subsection\"> Parsons Problems </div>\n          <p>\n            A key challenge in computer science education is developing pedagogical\n            approaches that are both engaging to students and aid in the efficient\n            acquisition of programming skills. A promising approach that has been the focus\n            of my research is Parsons problems, an activity where students\n            arrange blocks of code to form a program that satisfies a given\n            specification. This problem type has shown benefits both in formative contexts,\n            where they improve learning efficiency while reducing cognitive load, and\n            summative assessments, where they have been shown to test skills similar to code\n            writing.\n          </p>\n\n          <div class=\"subsubsection\"> Distractors in Parsons Problems </div>\n          <div style={{display: \"flex\"}}>\n            <div style={{flex: \"1\"}}>\n              <Image className=\"img-container\" src=\"assets/parsons_distractors.png\" width=\"300px\" />\n              <div>\n                <b>Figure 1:</b> Example of a Parsons problem with distractors.\n              </div>\n            </div>\n            <div style={{flex: \"4\"}}>\n              <p>\n                The focus of my work in this area has been on the use of\n                distractors in Parsons problems. Distractors are incorrect\n                blocks of code that are included in the set of possible blocks\n                presented to the student when solving a Parsons problem. I\n                developed a <a href=\"\"><u>novel approach</u></a> to create and\n                then automatically generate distractors for Parsons problems.\n                My work has evaluted the effectiveness of these distractors in\n                both summative and formative contexts, finding that, though\n                they are somewhat ineffective at improving the quality of exam\n                questions, <i>they are essential</i> for improving learning\n                outcomes for learners in formative contexts. This work has been\n                published in the following papers:\n              </p>\n              <ul>\n                <li> <b><a href=\"http://zilles.cs.illinois.edu/papers/smith_parsons_sigcse23.pdf\">Discovering, Autogenerating, and Evaluating Distractors for Python Parsons Problems in CS1 -- </a></b> This paper presents a process for selecting distractors in Parsons problems from student submissions, introduces a tool for automatically generating them, and analyzes their impact on summative assessments, concluding that distractors increase completion time without improving problem discrimination.</li>\n                <li> <b><a href=\"https://drive.google.com/file/d/1ZrqD_eS2A4_5QMDdl1GgC34wlu2qdw_1/view\">Investigating the Role and Impact of Distractors on Parsons Problems in CS1 Assessments -- </a></b> This study examines the impact of distractors in Parsons problems from CS1 Python exams, finding that while distractors significantly increase the time students spend on problems, they have little effect on scores or item discrimination, suggesting their inclusion may reduce exam efficiency without improving problem quality.</li>\n                <li> <b><a href=\"https://zilles.cs.illinois.edu/papers/smith_parsons_grouped_COMPED_2023.pdf\">Comparing the Impacts of Visually Grouped and Jumbled Distractors on Parsons Problems in CS1 Assessments -- </a></b> This study investigates the effect of jumbled and visually grouped distractors in Parsons problems on student performance, time spent, and item quality in a CS1 Python course, finding that while visually grouped distractors slightly reduce time compared to jumbled ones, both forms increase problem-solving time and reduce performance without significantly improving item quality.</li>\n                <li> <b><a href=\"https://dl.acm.org/doi/pdf/10.1145/3632620.3671114\">Distractors Make You Pay Attention: Investigating the Learning Outcomes of Including Distractor Blocks in Parsons Problems -- </a></b> This study investigates the impact of distractor blocks in Parsons problems on student learning, finding that students who practiced with distractors performed better on both immediate and retention tests, with qualitative data suggesting that distractors help students focus more on code details, making them essential for formative learning contexts.</li>\n              </ul>\n            </div>\n          </div>\n\n\n\n          <div class=\"subsection\"> Transforming Explain in Plain English Questions into Explain in Plain Language Questions </div>\n          <div width=\"90%\">\n            <Image className=\"img-container\"  src=\"assets/schematic.png\" height=\"175px\" />\n            <div>\n              <b>Figure 2:</b> Schematic of the Code Generation Based Grading (CGBG) approach.\n            </div>\n          </div>\n          <br/>\n          <p>\n            <b>I developed a novel auto-grader for EiPE activities</b>, \n            <a href=\"https://dl.acm.org/doi/abs/10.1145/3649217.3653582\"><u>“Code\n            Generation Based Grading”</u></a> (CGBG) which addresses many of\n            the difficulties inherent in grading EiPE activities. In this\n            approach, the individual’s response to an EiPE question is used to\n            generate code which is then evaluated against a set of test cases to\n            determine if the response was capable of generating code that is\n            functionally equivalent to the code being described (Figure 2).\n            Additionally, given the multilingual capabilities of modern LLMs, \n            this approach <b>transforms what were formerly EiPE activities into\n            Explain in Plain Language (EiPL) activities</b>, enabling the use of\n            non-English prompts. This approach has undergone a variety of\n            evaluations which have been published in the following papers:\n          </p>\n          <ul>\n            <li> <b><a href=\"https://dl.acm.org/doi/abs/10.1145/3649217.3653582\">Code Generation Based Grading: Evaluating an Auto-grading Mechanism for \"Explain-in-Plain-English\" Questions -- </a></b> This paper introduced the approach, finding it to be capable of grading EiPE questions but also finding that it suffers from a lack of ability to disinguish between high and low level descriptions of code. </li>\n            <li> <b><a href=\"https://dl.acm.org/doi/pdf/10.1145/3657604.3662039\">Prompting for Comprehension: Exploring the Intersection of Explain in Plain English Questions and Prompt Writing: </a></b> This paper evaluates a scalable approach for grading \"Explain in Plain English\" (EiPE) questions by using large language models (LLMs) to generate code from students' descriptions and testing its correctness, enabling automated feedback to help students develop code comprehension and natural language prompt skills, while also examining student success and perceptions of this method in an introductory programming course.</li>\n            <li> <b><a href=\"https://dl.acm.org/doi/pdf/10.1145/3649217.3653587\">Explaining code with a purpose: An integrated approach for developing code comprehension and prompting skills --</a></b> This paper explores how integrating \"Explain in Plain English\" (EiPE) questions with code-generating large language models (LLMs) can facilitate automatic grading and foster both traditional code comprehension skills and the new ability to craft prompts for generating code, reporting positive outcomes in an introductory programming course along with insights into students' perceptions of using LLMs for learning and assessment. </li>\n            <li> <b><a href=\"https://arxiv.org/pdf/2409.20297\">Explain in Plain Language Questions with Indic Languages:\n            Drawbacks, Affordances, and Opportunities -- </a></b> This study evaluates the Code Generation Based Grading (CGBG) approach for enabling language-agnostic \"Explain in Plain Language\" (EiPL) activities in a linguistically diverse context, finding promising results for generating correct code from responses in various Indian languages, though students often preferred English due to familiarity and concerns about grader accuracy with non-English prompts.</li>\n            <li> <b><a href=\"https://arxiv.org/abs/2410.03063\">Integrating Natural Language Prompting Tasks in Introductory Programming Courses --</a></b> This experience report explores the integration of natural language prompt-focused activities in an introductory programming course, highlighting their potential to shift the focus from syntax mastery to problem-solving, making computing more accessible and engaging for students who find traditional programming tasks challenging.</li>\n          </ul>\n          <p>\n            To support the continued adoption and evaluation of this approach,\n            <b>this autograder has been released as an open-source Python\n            package</b> <a\n            href=\"https://github.com/CoffeePoweredComputers/eiplgrader\"\n            target=\"_blank\"><u>eiplgrader</u></a> which I am continuing to\n            actively develop and maintain. <b>This system has been\n            deployed at multiple institutions,</b> including University of\n            Illinois Urbana-Champaign, University of California - San Diego, the\n            University of Auckland, and an online course by the Indian Institute of\n            Science.\n          </p>\n\n\n        </Jumbotron >\n      </Container >\n      );\n  }\n}\n","import React, { Component } from 'react';\nimport { Jumbotron, Container, Row, Col, Card, Spinner } from 'react-bootstrap';\nimport \"./Travel.css\";\n\nexport default class Travel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: new Array(4).fill(true) // Assuming 4 directories for simplicity\n    };\n  }\n  componentDidMount() {\n    document.title = \"David H Smith IV | Home\";\n  }\n\n  handleTileClick = (directory) => {\n    console.log(`Tile for ${directory.title} clicked`);\n    // this.props.history.push(`/gallery/${directory.id}`);\n  }\n\n  handleImageLoad = (index) => {\n    this.setState(prevState => {\n      const newLoadingState = [...prevState.loading];\n      newLoadingState[index] = false;\n      return { loading: newLoadingState };\n    });\n  }\n\n  render() {\n    // Sample directories array\n    const directories = [\n      {\n        id: '1',\n        coverPhoto: 'assets/comped_2023_cover.png',\n        title: 'India - CompEd 2023',\n        description: 'Visit to Hyderabad, Delhi, Agra, and Leh',\n      },\n      {\n        id: '2',\n        coverPhoto: 'assets/iticse_2024_cover.png',\n        title: 'Italy - ITiCSE 2024',\n        description: 'Rome and Milan',\n      },\n      {\n        id: '3',\n        coverPhoto: 'assets/hawaii_2023_cover.png',\n        title: 'Hawai\\'i 2023',\n        description: 'The \"Big Island\" - Hilo and Kona',\n      }\n    ];\n\n    return (\n      <Container>\n        <Jumbotron>\n          <h1>Welcome to My Travel Gallery!</h1>\n          <p>Explore my travel photos below.</p>\n          <Row>\n            {directories.map((directory, index) => (\n            <Col key={index} sm={6} md={4} lg={3} className=\"mb-4\">\n              <a href={directory.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                <div className=\"card-container\">\n                  <Card className=\"image-container\">\n                    {this.state.loading[index] && (\n                    <div className=\"spinner-container\">\n                      <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                      </Spinner>\n                    </div>\n                    )}\n                    <Card.Img\n                    variant=\"top\"\n                    src={directory.coverPhoto}\n                    alt={directory.title}\n                    onLoad={() => this.handleImageLoad(index)}\n                    style={{ display: this.state.loading[index] ? 'none' : 'block' }}\n                  />\n                    </Card>\n                    <Card.Body>\n                      <Card.Title>{directory.title}</Card.Title>\n                      <Card.Text>{directory.description}</Card.Text>\n                    </Card.Body>\n                  </div>\n                </a>\n              </Col>\n              ))}\n            </Row>\n          </Jumbotron>\n        </Container>\n        );\n  }\n}\n","import React, { Component } from 'react'\nimport { Jumbotron, Container, Row, Col, Image, Button, ListGroup, CardDeck, Card} from 'react-bootstrap';\nimport \"./teaching.css\";\n\nexport default class Teaching extends Component {\n\n  componentDidMount() {\n    document.title = \"David H Smith IV | Research\";\n  }\n\n  render() {\n\n    return (\n\n      <Container fluid>\n        <Jumbotron>\n          <Col>\n            <div class=\"section\"> Teaching Statement </div>\n            <p className=\"mb-3\" style={{ marginLeft: '1.5em' }}>\n              A call to teaching first inspired me to pursue a Ph.D. in\n              Computer Science and shaped my focus on Computer Science\n              Education research. Much of my work stems from a desire to\n              systematically improve the practices in the classes I have\n              taught. However, there is a tension between science and practice\n              that exists in the realm of education. A tension noted by Josiah\n              Royce, a prominent philosopher from the latter half of the 19th\n              century.\n            </p>\n            <blockquote class=\"blockquote-text\">\n              <em>\n                I have always felt unwilling to apply so pretentious and comforting a name as \"Science\" to any exposition of the laborious and problematic art of the educator. - Josiah Royce\n              </em>\n            </blockquote>\n            <p className=\"mb-3\" style={{ marginLeft: '1.5em' }}>\n              This sentiment suggests to me that my endeavors as an educational\n              researcher serve only to suggest what <em>may</em> serve as best\n              practices. It is then upon me, as the instructor, to evaluate,\n              integrate, and adapt these practices to best suit their given\n              context. This makes effective pedagogy, in my estimation, \n              <b> where the <em>science</em> of education meets <em>art and\n              engineering</em> that is teaching and curriculum design</b>. It\n              is under this broader philosophy that I frame my general approach\n              to teaching best practices and their implementation, as\n              demonstrated through my experiences as a teaching assistant and\n              instructor.\n            </p>\n\n            <div class=\"subsection\">Teaching and Curriculum Design Experience</div>\n            <p className=\"mb-3\" style={{ marginLeft: '1.5em' }}>\n              <strong>I have served in a variety of teaching roles including as\n              a teaching assistant, co-instructor, and instructor of\n              record.</strong> These include a large introductory Python course\n              for non-technical majors (400-700 students), a semester-long\n              high-school introductory programming course (15 students), and a\n              data structures course for in-service K-12 teachers (14\n              students). I had the opportunity to teach these courses as the\n              primary instructor and was given significant freedom in\n              designing, implementing, and teaching them. The course websites\n              for those which I served as the instructor of record can be found\n              at the following links:\n            </p>\n\n            <CardDeck className=\"styled-card-deck\">\n              <Card className=\"styled-card\">\n                <a href=\"https://hamiltonfour.tech/cs-105-summer-21/\" className=\"card-link\">\n                  <Card.Body>\n                    <Card.Title className=\"card-title\">\n                      <b>Introduction to Programming for Non-technical Majors (CS 105)</b>\n                    </Card.Title>\n                    <Card.Text className=\"card-text\">\n                      A comprehensive course designed to introduce programming\n                      concepts to students without a technical background,\n                      focusing on the fundamentals of the Python programming\n                      language.\n                    </Card.Text>\n                  </Card.Body>\n                </a>\n              </Card>\n              <Card className=\"styled-card\">\n                <a href=\"https://hamiltonfour.tech/uni-high-fall-21/\" className=\"card-link\">\n                  <Card.Body>\n                    <Card.Title className=\"card-title\">\n                      <b>Introduction to Programming - University Laboratory High School</b>\n                    </Card.Title>\n                    <Card.Text className=\"card-text\">\n                      An introductory course aimed at high school students,\n                      emphasizing hands-on projects and peer instruction to\n                      foster a collaborative learning environment.\n                    </Card.Text>\n                  </Card.Body>\n                </a>\n              </Card>\n              <Card className=\"styled-card\">\n                <a href=\"https://hamiltonfour.tech/487-data-structures/\" className=\"card-link\">\n                  <Card.Body>\n                    <Card.Title className=\"card-title\">\n                      <b>Data Structures for CS Teachers (CI 487)</b>\n                    </Card.Title>\n                    <Card.Text className=\"card-text\">\n                      A specialized course I developed, tailored for in-service\n                      K-12 teachers, focusing on Java programming fundamentals\n                      and the principles of data structures.\n                    </Card.Text>\n                  </Card.Body>\n                </a>\n              </Card>\n            </CardDeck>\n\n            <div class=\"subsection\">Teaching Philosophy - Sustainable Adoption of Evidence-Based Best Practices</div>\n            <p className=\"mb-3\" style={{ marginLeft: '1.5em' }}>\n              In my teaching, I use evidence-based teaching practices across all aspects of the course. Though I have encountered many in my time as an educator and education researcher, the following are those which I have adopted and found most effective:\n              <ul>\n                <li>\n                  <strong>Individualized Support:</strong> As a former tutor who has benefited greatly from tutoring, I recognize the unique impact of one-on-one support. In my courses, I aim to offer ample opportunities for individualized help through office hours and tutoring sessions.\n                </li>\n                <li>\n                  <strong>Frequent Testing:</strong> In the design of summative assessments, I am a firm believer in the effectiveness of <em>frequent testing</em> for promoting frequent study and improving students' learning outcomes. I use PrairieLearn, an open-source platform with automatically graded questions, to facilitate frequent, authentic assessments.\n                </li>\n                <li>\n                  <strong>Active Learning:</strong> This involves engaging students through activities such as discussions and problem solving with the goal of improving both engagement and learning. To support this, I design computer-based activities and tools which I embed within lectures, allowing students hands-on practice, illustrate points, and allow students to interact with worked examples.\n                </li>\n                <li>\n                  <strong>Peer Instruction:</strong> I facilitate peer instruction through in-lecture questions and activities, transforming lectures into active learning sessions where students at a similar level collaboratively solve problems, reinforcing their understanding and improving learning outcomes while reducing fail rates.\n                </li>\n                <li>\n                  <strong>Spiral Curriculum Design:</strong> The spiral curriculum introduces all course topics briefly in the first half of the course, then revisits each in greater depth in the second. I find this particularly effective in introductory programming, as it gives students with limited experience a lay of the programming landscape before exploring topics in detail and allows them to begin writing more interesting programs early on in the course.\n                </li>\n              </ul>\n              To support these practices, I leverage technologies like PrairieLearn and interactive textbooks. The auto-grading features they provide <strong>enable sustainable adoption of best practices</strong> like immediate feedback and frequent testing, allowing my instructional staff and me to focus on aspects that are harder to scale, such as individualized support.\n            </p>\n          </Col>\n        </Jumbotron >\n      </Container >\n      );\n}\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Navbar from './components/NavBar/NavBar.jsx';\nimport Home from './components/Home/Home.jsx';\nimport Publications from './components/Publications/Publications.jsx';\nimport CV from './components/CV/cv.jsx';\nimport Blog from './components/Blog/Blog.jsx';\nimport ReadingList from './components/ReadingList/ReadingList.jsx';\nimport Travel from './components/Travel/Travel.jsx';\nimport Research from './components/Research/research.jsx';\nimport Teaching from './components/Teaching/teaching.jsx';\n//<Route path=\"/readinglist\" component={ReadingList} />\n//<Route path=\"/travel\" component={Travel} />\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div>\n          <Navbar />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/cv\" component={CV} />\n          <Route path=\"/research\" component={Research} />\n          <Route path=\"/teaching\" component={Teaching} />\n          <Route path=\"/publications\" component={Publications} />\n          <Route path=\"/blog\" component={Blog} />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}